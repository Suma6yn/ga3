name: Deploy Flask Todo App to AWS EC2

on:
  workflow_dispatch:
    
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create .env file from secrets
        run: |
          echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> .env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "MYSQL_DB=${{ secrets.MYSQL_DB }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
            echo "APP_PORT=${{ secrets.APP_PORT }}" >> .env

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~
            if [ ! -d "flask-bootstrap-app" ]; then
              git clone https://github.com/itdbcy/ga3.git flask-bootstrap-app
            fi
            cd flask-bootstrap-app
            git pull origin main
            if ! command -v pip3 &> /dev/null; then
              sudo apt-get update && sudo apt-get install -y python3-pip || sudo yum install -y python3-pip
            fi
            pip3 install --break-system-packages -r requirements.txt
            echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" > app/.env
            echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> app/.env
            echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> app/.env
            echo "MYSQL_DB=${{ secrets.MYSQL_DB }}" >> app/.env
            echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> app/.env
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> app/.env
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> app/.env
            echo "APP_PORT=${{ secrets.APP_PORT }}" >> app/.env
            sudo ufw allow ${{ secrets.APP_PORT }}
            export $(cat app/.env | xargs)
            python3 app.py &
